//%import .division.DIVISION
//%import .department.DEPARTMENT
//%import .position.POSITION
%ignore " "
%ignore COMMENT
%ignore SCRIPT
%ignore /\t/

_newline: /\n/+ //define line change as one or more \n to allow empty lines 
start: START withstep? _newline (importstep _newline)* (process _newline)* END /\n/* SCRIPT*
withstep: WITH /\n/* ((ARGUMENT "," /\n/*)*) ARGUMENT
importstep: IMPORT /[-\.\w]+/ (AS /[-\.\w]+/)? withstep?
process: PROCESS /\w+/ _newline [userstep _newline] steps END
steps: (_step _newline)*
_step: command
    | checkstep
    | parallelstep
    | process
    | callstep //executes the steps of a predifined process 
    | change_userstep
    | CONTINUE //does nothing and exists for visual purposes instead of leaving a code part empty
command: COMMAND  /[-\)"\('&\w]+/+
checkstep : TRY _newline steps CHECK /[-\)"\('?&\w]+/+ _newline yes _newline no _newline END
yes: YES _newline steps [(RETRY | ABORT) _newline] END
no: NO _newline steps [(RETRY | ABORT) _newline] END
parallelstep: PARALLEL _newline steps END
callstep: (CALL /[-\.\w]+/ (FROM /[-\.\w]+/)?) | ((FROM /[-\.\w]+/)? CALL /[-\.\w]+/)
userstep: USERS _newline (user _newline)+ END
change_userstep: CHANGE_USERS _newline ((ADD | REMOVE) user _newline)+ END
user: "(" (ROLE ",")~2 ROLE ")" NAME+


PROCESS: "process"
USERS: "users"
NAME: /[a-zA-Z&]+/ //at least one or more alphabetic characters
ROLE: /[&\w]+/+ | "-"
TRY: "try"
CHECK: "check"
YES: "yes"
NO: "no"
RETRY: "retry"
ABORT: "abort"
CONTINUE: "continue"
PARALLEL: "parallel"
CHANGE_USERS: "change users"
ADD: "add"
REMOVE: "remove"
CALL: "call"
END: "end"
START: "start"
WITH: "with"
IMPORT: "import"
AS: "as"
FROM: "from"
ARGUMENT: /\w+/ " "* "=" " "* ("&"?/\w+/ " "*)+
COMMAND: "command1" | "command2" | "command3" | "compose" | "sign" | "send" | "receive" | "archive" | "execute" //some placeholders
COMMENT: /#.*/
SCRIPT: "run"  /.*/ /\n/* 
